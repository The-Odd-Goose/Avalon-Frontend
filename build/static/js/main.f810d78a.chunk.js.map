{"version":3,"sources":["firebase-init.tsx","components/fetch.tsx","components/MainMenu.tsx","components/GameRoom/Mission.tsx","components/GameRoom/Players.tsx","components/GameRoom/GameRoom.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","createFetchRequest","data","method","endpoint","a","myHeaders","Headers","append","raw","JSON","stringify","fetch","headers","body","redirect","then","response","ok","json","text","catch","error","console","log","createPostRequest","createDeleteRequest","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","addToGameFetch","username","gameId","uid","createGameFetch","JoinGame","useState","roomCode","setRoomCode","setUsername","inGame","setInGame","setError","loading","setLoading","joinGameRoom","e","preventDefault","createGameRoom","gameCode","to","Alert","variant","Heading","Form","onSubmit","Group","Label","Control","type","onChange","target","value","Button","MainMenu","props","useAuthState","user","numMission","ChooseMission","players","turn","mission","setMission","remaining","setRemaining","useEffect","length","boolPlayers","i","push","mapPlayerToMissionChoice","player","key","photoURL","Image","src","alt","roundedCircle","newMission","changeChoice","Badge","submitMissionProposal","proposeMission","element","map","disabled","displayPlayer","Vote","voteField","stringFor","stringAgainst","path","show","voteFor","setShow","voteOnMission","handleClick","handleClose","state","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Footer","getCanVote","vote","reduce","prev","current","VoteMission","voteAgainst","canVote","get","DecideMission","getJsxArray","num","upperNum","jsxTrue","jsxFalse","jsxArray","MissionChoices","successMission","failMission","Mission","gameData","missionMaker","playersDict","success","fail","rejections","rejected","successJsx","Spinner","animation","failJsx","rejectionsJsx","Player","status","Card","border","bg","Img","Text","mapPlayerToTsx","Players","CardDeck","merlin","morgana","mordred","percival","bad","deleteGameFetch","Owner","deleteGame","startGame","GameRoom","useParams","gamesRef","collection","doc","useDocumentData","playersRef","useCollectionData","idField","playersLoading","owner","setOwner","notMember","setNotMember","userInfo","setUserInfo","setMissionMaker","Map","setPlayersDict","undefined","doesNotBelong","isOwner","set","loopPlayers","getUserInfo","getPlayersDict","playersList","winner","href","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f810d78a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB-0O4MKOLCzVqgHWg1Ho93D4JvaVO6uRw\",\n  authDomain: \"the-odd-goose.firebaseapp.com\",\n  databaseURL: \"https://the-odd-goose.firebaseio.com\",\n  projectId: \"the-odd-goose\",\n  storageBucket: \"the-odd-goose.appspot.com\",\n  messagingSenderId: \"487313202863\",\n  appId: \"1:487313202863:web:5f793d2cdc66c1bdd07e5a\",\n  measurementId: \"G-KHHZH32NDE\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nexport {firebase, auth, firestore};","const createFetchRequest = async (data: Object, method: string, endpoint:string) =>\n    {\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n\n        var raw = JSON.stringify(data);\n\n        const backendURL = \"https://backend-26kgkl3loq-uc.a.run.app\"\n        const json = await fetch(`${backendURL}${endpoint}`, {\n            method: method,\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n        })\n            .then(async response =>\n                {\n                    if (response.ok) {\n                        return await response.json()\n                    } else {\n                        return await response.text()\n                    }\n                })\n            .catch(error => console.log('error', error));\n\n        return json;\n    }\n\n// returns a promise that is fulfilled with post\nconst createPostRequest = (data: Object, endpoint: string) => {\n    return createFetchRequest(data, 'POST', endpoint)\n}\n\nconst createDeleteRequest = (data: Object, endpoint: string) => {\n    return createFetchRequest(data, 'DELETE', endpoint)\n}\n\nexport {createPostRequest, createDeleteRequest};","import React, { useState } from 'react'\r\nimport { Alert, Button } from 'react-bootstrap';\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport firebase from \"firebase/app\"\r\nimport { auth } from '../firebase-init';\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nimport { Redirect } from 'react-router';\r\n\r\nimport { createPostRequest } from './fetch'\r\n\r\ninterface Props {\r\n}\r\n\r\n// a button for signing in\r\nfunction SignIn() {\r\n\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <button onClick={signInWithGoogle}>Sign in with Google</button>\r\n    )\r\n\r\n}\r\n\r\n// a button for signing out\r\nfunction SignOut() {\r\n    return auth.currentUser && (\r\n        <button onClick={() => auth.signOut()}>Sign Out</button>\r\n    )\r\n}\r\n\r\nconst addToGameFetch = async (username: string, gameId: string, uid: string) => {\r\n\r\n    const data = { username, gameId, uid };\r\n    return await createPostRequest(data, '/gameMember')\r\n\r\n}\r\n\r\nconst createGameFetch = async (username: string, uid: string) => {\r\n    const data = { username, uid }\r\n    return await createPostRequest(data, '/game')\r\n}\r\n\r\nfunction JoinGame() {\r\n\r\n    // TODO: add in a loading after pressing join game and create game and disable buttons\r\n\r\n    const [roomCode, setRoomCode] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [inGame, setInGame] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    // for joining a game\r\n    const joinGameRoom: (e: React.FormEvent<HTMLFormElement>) => void = async (e) => {\r\n        setLoading(true)\r\n        // here we'll add the user id to the specific game room\r\n        e.preventDefault();\r\n\r\n        // as long as the current user exists, then print out the uid and photoURL\r\n        if (auth.currentUser != null) {\r\n            const { uid } = auth.currentUser;\r\n            // then here we'll send an http request\r\n            const response = await addToGameFetch(username, roomCode, uid)\r\n\r\n            if (typeof response === 'string') {\r\n                // then an error has occured\r\n                setError(response)\r\n                setLoading(false)\r\n            } else {\r\n                // now we want to redirect to a separate page\r\n                setInGame(true);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    // for creating a game\r\n    const createGameRoom: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void = async (e) => {\r\n        setLoading(true)\r\n        e.preventDefault();\r\n\r\n        if (auth.currentUser != null) {\r\n            const { uid } = auth.currentUser;\r\n            const gameCode = await createGameFetch(username, uid)\r\n\r\n            if (typeof gameCode !== 'string') {\r\n                setRoomCode(gameCode.gameId);\r\n                setInGame(true)\r\n            } else {\r\n                setError(gameCode)\r\n                setLoading(false)\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if (inGame) {\r\n        return (\r\n            <Redirect to={`/games/${roomCode}`} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        loading ? <>loading...</> :\r\n        <div>\r\n            {error && \r\n                <Alert variant=\"danger\">\r\n                    <Alert.Heading>An error has occured!</Alert.Heading>\r\n                    <p>{error}</p>\r\n                </Alert>\r\n            }\r\n\r\n            <Form onSubmit={joinGameRoom}>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Game Room Code:</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e) => setRoomCode(e.target.value)} />\r\n\r\n                    <Form.Label>Nickname:</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e) => setUsername(e.target.value)} />\r\n\r\n                    {/* For hosting your own game */}\r\n                    <Form.Label>Or create your own game:</Form.Label>\r\n                    <Button variant=\"secondary\" onClick={createGameRoom}>Host</Button>\r\n\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">Join</Button>\r\n\r\n            </Form>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport const MainMenu = (props: Props) => {\r\n\r\n    const [user] = useAuthState(auth);\r\n\r\n    return (\r\n        <>\r\n            <SignOut />\r\n            {user ?\r\n                <div><JoinGame /></div> : <SignIn />}\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Spinner, Image, Badge, Button, Alert, Modal } from 'react-bootstrap';\r\nimport { createPostRequest } from '../fetch';\r\n\r\ninterface Props {\r\n    gameData: any,\r\n    missionMaker: string,\r\n    players: Array<any> | undefined,\r\n    uid: string,\r\n    gameId: string,\r\n    playersDict: Map<String, any>\r\n}\r\n\r\ninterface ChooseProps {\r\n    players: Array<any> | undefined,\r\n    turn: number,\r\n    uid: string,\r\n    gameId: string\r\n}\r\n\r\nconst numMission = [\r\n    [2, 3, 2, 3, 3], // 5 people\r\n    [2, 3, 3, 3, 4], // 6 people\r\n    [3, 4, 3, 4, 5], // 7 people\r\n    [3, 4, 4, 4, 5] // 8 people\r\n]\r\n\r\nconst ChooseMission = (props: ChooseProps) => {\r\n    const { players, turn, uid, gameId } = props;\r\n\r\n    const [mission, setMission]: [boolean[], any] = useState([])\r\n    const [remaining, setRemaining] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (players) {\r\n            const length = players.length\r\n            const boolPlayers = []\r\n            for (let i = 0; i < length; i++) {\r\n                boolPlayers.push(false)\r\n            }\r\n            setMission(boolPlayers)\r\n            setRemaining(numMission[length - 5][(turn - 10) / 10])\r\n        }\r\n    }, [players])\r\n\r\n    const changeChoice = (key: number) => {\r\n        if (remaining <= 0 && !mission[key]) {\r\n            return;\r\n        }\r\n        const newMission = mission;\r\n        newMission[key] = !mission[key]\r\n        setMission(newMission)\r\n        setRemaining((remaining) => (mission[key] ? remaining - 1 : remaining + 1))\r\n    }\r\n\r\n    const mapPlayerToMissionChoice = (player: any, key: number) => {\r\n        const { photoURL, username } = player;\r\n        return (\r\n            <span key={key}>\r\n                <Image src={photoURL} alt=\"Profile\" roundedCircle onClick={(e) => changeChoice(key)} />\r\n                {\" \"} {username} {\" \"}\r\n                {mission[key] && <Badge variant=\"success\">Mission Select</Badge>}\r\n            </span>\r\n        )\r\n    }\r\n\r\n    const submitMissionProposal = async () => {\r\n        setLoading(true)\r\n        const proposeMission = []\r\n        for (let i = 0; i < mission.length; i++) {\r\n            if (players) {\r\n                const element = players[i]\r\n                if (mission[i] && element) {\r\n                    proposeMission.push(element.uid)\r\n                }\r\n            }\r\n        }\r\n\r\n        const response = await createPostRequest({ uid, gameId, mission: proposeMission }, \"/proposeMission\")\r\n\r\n        if (typeof response === 'string') {\r\n            setError(response)\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading && <>...loading</>}\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            {players?.map((player, i) => {\r\n                return mapPlayerToMissionChoice(player, i)\r\n            })}\r\n            Remaining Number of People to add to mission: {remaining}\r\n            {\" \"}\r\n            <Button variant=\"outline-warning\" onClick={submitMissionProposal} disabled={remaining !== 0 && !loading}>Submit Mission Proposal!</Button>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface VoteProps {\r\n    voteFor: Array<any>,\r\n    voteAgainst: Array<any>,\r\n    mission: Array<string>,\r\n    vote: Array<string>,\r\n    uid: string,\r\n    players: Map<String, any>,\r\n    gameId: string\r\n}\r\n\r\nconst displayPlayer = (player: any, key: number): JSX.Element => {\r\n    if (player) {\r\n        const { photoURL, username } = player;\r\n        return (\r\n            <span key={key}>\r\n                <Image src={photoURL} alt=\"Profile\" roundedCircle />\r\n                {\" \"} {username} {\" \"}\r\n            </span>\r\n        )\r\n    }\r\n    return <></>;\r\n}\r\n\r\ninterface VoteFormProps {\r\n    gameId: string,\r\n    uid: string,\r\n    voteField: string,\r\n    stringFor: string,\r\n    stringAgainst: string,\r\n    path: string\r\n}\r\n\r\nconst Vote = (props: VoteFormProps) => {\r\n    const { gameId, uid, voteField, stringFor, stringAgainst, path } = props;\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n    const [show, setShow] = useState({ show: false, voteFor: false })\r\n\r\n    const voteOnMission = async () => {\r\n        setLoading(true)\r\n        const response = await createPostRequest({ gameId, uid, [voteField]: show.voteFor }, path)\r\n        if (typeof response === 'string') {\r\n            // ie there is an error,\r\n            setError(response)\r\n        }\r\n        setLoading(false)\r\n        setShow({ show: false, voteFor: false })\r\n    }\r\n\r\n    const handleClick = (voteFor: boolean) => {\r\n        setShow({ show: true, voteFor })\r\n    }\r\n\r\n    const handleClose = () => setShow((state) => ({ show: false, voteFor: state.voteFor }))\r\n\r\n    return (\r\n        <>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Button variant=\"primary\" onClick={() => handleClick(true)}>{stringFor}</Button>\r\n            <Button variant=\"danger\" onClick={() => handleClick(false)}>{stringAgainst}</Button>\r\n\r\n            <Modal\r\n                show={show.show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{show.voteFor ? stringFor : stringAgainst}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{loading ? \"...loading\" : \"Are you sure you want to vote this way?\"}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\r\n                    <Button variant=\"primary\" onClick={voteOnMission}>Yes</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n// finds if uid is in array vote\r\nconst getCanVote = (vote: Array<any>, uid: string): boolean => {\r\n    return vote.reduce((prev, current) => {\r\n        return prev || uid === current\r\n    }, false)\r\n}\r\n\r\nconst VoteMission = (props: VoteProps) => {\r\n\r\n    const { voteFor, voteAgainst, mission, vote, players, uid, gameId } = props;\r\n\r\n    const canVote = getCanVote(vote, uid)\r\n\r\n    return (\r\n        <>\r\n            Players on Mission: {\" \"}\r\n            {mission?.map((player, key) => {\r\n                return displayPlayer(players.get(player), key)\r\n            })}\r\n\r\n            <hr />\r\n            {vote && \"Players left to vote:\" &&\r\n                vote?.map((player, key) => {\r\n                    return displayPlayer(players.get(player), key)\r\n                })\r\n            }\r\n            <hr />\r\n            Voted For: {\" \"}\r\n            {voteFor?.map((player, key) => {\r\n                return displayPlayer(players.get(player), key)\r\n            })}\r\n\r\n            <hr />\r\n            Voted Against: {\" \"}\r\n            {voteAgainst?.map((player, key) => {\r\n                return displayPlayer(players.get(player), key)\r\n            })}\r\n\r\n            <hr />\r\n            {canVote &&\r\n                <Vote\r\n                    gameId={gameId}\r\n                    uid={uid}\r\n                    voteField=\"voteFor\"\r\n                    path=\"/voteMission\"\r\n                    stringAgainst=\"Vote Against Mission\"\r\n                    stringFor=\"Vote For Mission\"\r\n                />}\r\n        </>\r\n    )\r\n}\r\n\r\ninterface DecideMissionProps {\r\n    mission: Array<any>,\r\n    uid: string,\r\n    gameId: string\r\n}\r\n\r\nconst DecideMission = (props: DecideMissionProps) => {\r\n    const { mission, uid, gameId } = props;\r\n    const canVote = getCanVote(mission, uid)\r\n\r\n    return (\r\n        <>\r\n            {canVote &&\r\n                <>Decide on mission!\r\n                    <Vote\r\n                        gameId={gameId}\r\n                        uid={uid}\r\n                        voteField=\"vote\"\r\n                        path=\"/choose\"\r\n                        stringAgainst=\"Fail Mission\"\r\n                        stringFor=\"Succeed Mission\"\r\n                    />\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst getJsxArray = (num: Number, upperNum: number, jsxTrue: (key: number) => JSX.Element, jsxFalse: (key: number) => JSX.Element): Array<JSX.Element> => {\r\n    const jsxArray: Array<JSX.Element> = []\r\n\r\n    for (let i = 0; i < upperNum; i++) {\r\n        if (num < i + 1) {\r\n            jsxArray.push(jsxTrue(i))\r\n        } else {\r\n            jsxArray.push(jsxFalse(i))\r\n        }\r\n    }\r\n\r\n    return jsxArray;\r\n}\r\n\r\ninterface MissionChoicesProps {\r\n    successMission: number,\r\n    failMission: number\r\n}\r\n\r\nconst MissionChoices = (props: MissionChoicesProps) => {\r\n    const {successMission, failMission} = props;\r\n\r\n    return (\r\n        <>Votes for success: {successMission} {\" \"} Votes for fail: {failMission}</>\r\n    )\r\n}\r\n\r\nexport const Mission = (props: Props) => {\r\n\r\n    const { gameData, missionMaker, players, uid, gameId, playersDict } = props;\r\n    const { success, turn, fail, rejected: rejections, voteFor, voteAgainst, vote, mission, successMission, failMission } = gameData\r\n\r\n    // turns the number of successes into an array of jsx elements\r\n    // 3 - that number gets turned into a different type\r\n    const successJsx = getJsxArray(success, 3, (key) => <Spinner key={key} animation=\"border\" variant=\"secondary\" />, (key) => <Spinner key={key} animation=\"grow\" variant=\"success\" />)\r\n    const failJsx = getJsxArray(fail, 3, (key) => <Spinner key={key} animation=\"border\" variant=\"secondary\" />, (key) => <Spinner key={key} animation=\"grow\" variant=\"danger\" />)\r\n    const rejectionsJsx = getJsxArray(rejections, 5, (key) => <Spinner key={key} animation=\"border\" variant=\"secondary\" />, (key) => <Spinner key={key} animation=\"grow\" variant=\"dark\" />)\r\n\r\n    return (\r\n        <div>\r\n            Mission Successes: {successJsx}\r\n            {' '}\r\n            Mission Fails: {failJsx}\r\n            {\" \"}\r\n            Mission Rejections: {rejectionsJsx}\r\n\r\n            <hr />\r\n\r\n            {(turn % 10 === 0) && (turn < 60) &&\r\n\r\n                <>\r\n                    {turn >= 20 && \r\n                        <MissionChoices successMission={successMission} failMission={failMission}/>\r\n                    }\r\n                    {missionMaker === uid && // if the turn is x1 and we are the mission maker, show choosing mission\r\n                        <>\r\n                            Possible Mission People:\r\n                            <ChooseMission players={players} turn={turn} uid={missionMaker} gameId={gameId} />\r\n                        </>\r\n                    }\r\n                </>\r\n            }\r\n\r\n            {(turn % 10 === 1 || (turn % 10 === 5)) &&\r\n                <VoteMission gameId={gameId} uid={uid} voteFor={voteFor} voteAgainst={voteAgainst} vote={vote} mission={mission} players={playersDict} />\r\n            }\r\n\r\n            {(turn % 10 === 5) &&\r\n                <DecideMission gameId={gameId} uid={uid} mission={mission} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport { Card, CardDeck } from 'react-bootstrap';\n\n// single player\ninterface PropsPlayer {\n    player: any | undefined,\n    status: String,\n    missionMaker: Boolean \n}\n\nconst Player = (props: PropsPlayer) => {\n\n    const { player, status, missionMaker } = props;\n\n    // TODO: determine the different uses of status, ie bad makes it red or smth\n    // TODO: making this work\n\n    const mapPlayerToTsx = (player: any) => {\n        const { photoURL, username } = player;\n        return (\n            <Card border=\"secondary\" bg={missionMaker ? \"primary\": \"secondary\"}>\n                {missionMaker && <Card.Header>Mission Maker</Card.Header>}\n                <Card.Img variant=\"top\" src={photoURL} alt=\"Profile\" />\n                <Card.Body>\n                    <Card.Title>{username}</Card.Title>\n                    <Card.Text>\n                        {status}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        )\n    }\n\n    return (\n        player &&\n        mapPlayerToTsx(player)\n    )\n}\n\n// the following is all the players together\ninterface PropsPlayers {\n    players: Array<any> | undefined,\n    loading: Boolean,\n    user: any,\n    missionMaker: any // the mission maker's id\n}\n\nexport const Players = (props: PropsPlayers) => {\n    const { players, loading, user, missionMaker } = props;\n\n    return (\n        !loading ?\n            <CardDeck>\n                {players &&\n                    players.map((player, i) => {\n                        let status = \"\"\n                        if (player.uid === user.uid) {\n                            status += \"YOU!\"\n                            if (player.merlin) {\n                                status = \"You are the Goose Wizard!\"\n                            }\n                            else if (player.morgana) {\n                                status = \"You are the Duck Witch\"\n                            }\n                            else if (player.mordred) {\n                                status = \"You are the rubber ducky!\"\n                            }\n                            else if (player.percival) {\n                                status = \"You are the duck knight!\"\n                            } else {\n                                status = \"You are a normal duck citizen!\"\n                            }\n                        }\n\n                        if (player.bad) {\n                            if (user.bad || (!player.mordred && user.merlin)) {\n                                status += \"BAD Gooose - Tis a duck!!\"\n                            }\n                        }\n\n                        if ((player.merlin || player.morgana) && user.percival) {\n                            status += \"Goose wizard or Duck Witch!\"\n                        }\n\n                        status += \" NORMAL!\"\n\n                        return <Player key={i} player={player} status={status} missionMaker={player.uid === missionMaker}/>\n                    })}\n            </CardDeck> :\n            <>loading...</>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { Redirect, useParams } from 'react-router';\nimport { firestore, auth } from '../../firebase-init';\nimport { Mission } from \"./Mission\";\nimport { useDocumentData, useCollectionData } from \"react-firebase-hooks/firestore\"\nimport { Players } from './Players';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { Alert, Button } from 'react-bootstrap';\nimport { createPostRequest, createDeleteRequest } from '../fetch';\n\ninterface Props {\n\n}\n\ninterface OwnerProps {\n    gameId: String,\n    user: any\n}\n\nconst deleteGameFetch = async (uid: String, gameId: String) => {\n    const data = { gameId, uid }\n    console.log(\"deleted game\")\n    return await createDeleteRequest(data, '/game')\n}\n\nconst Owner = (props: OwnerProps) => {\n\n    const { user, gameId } = props;\n\n    const [error, setError] = useState(\"\")\n\n    const deleteGame = async () => {\n        const response = await deleteGameFetch(user.uid, gameId)\n        if (typeof response === 'string') {\n            setError(response)\n        }\n    }\n\n    const startGame = async () => {\n        console.log(\"start game\")\n        const data = { gameId, uid: user.uid }\n        const response = await createPostRequest(data, \"/startGame\")\n\n        if (typeof response === 'string') {\n            setError(response)\n        }\n    }\n\n    return (\n        <>\n            {error &&\n                <Alert variant=\"danger\">\n                    <Alert.Heading>An error occured while trying to start the game!</Alert.Heading>\n                    <p>{error}</p>\n                </Alert>}\n            <Button variant=\"danger\" onClick={deleteGame}>Delete Game</Button>\n            <Button variant=\"primary\" onClick={startGame}>(Re)Start Game</Button>\n        </>\n    )\n}\n\nconst loopPlayers = (players: Array<any> | undefined, user: any): [Boolean, Boolean, Object, Map<String, any>] => {\n    if (!players) {\n        return [false, false, {}, new Map()];\n    }\n\n    let doesNotBelong = true;\n    let isOwner = false;\n    let userInfo = {};\n\n    let playersDict = new Map()\n\n    for (const player of players) {\n        let uid = player.uid\n        if (typeof uid === 'string') {\n            playersDict.set(uid, player)\n        }\n        if (player.uid === user.uid) {\n            doesNotBelong = false;\n            isOwner = player.owner || isOwner;\n            userInfo = player;\n        }\n    }\n\n    return [doesNotBelong, isOwner, userInfo, playersDict]\n\n}\n\n// this game room will integrate the chat bar as well as the different missions and such\nexport const GameRoom = (props: Props) => {\n\n    // gets the gameId\n    let { gameId }: any | null = useParams();\n\n    // should fetch the data from the firebase store\n    const gamesRef = firestore.collection('games').doc(gameId)\n    const [gameData, loading]: [any, any, any] = useDocumentData(gamesRef)\n    const [user] = useAuthState(auth)\n\n    const playersRef = gamesRef.collection(\"players\")\n    const [players, playersLoading] = useCollectionData(playersRef, { idField: \"id\" });\n\n    const [owner, setOwner] = useState(false)\n    const [notMember, setNotMember] = useState(false)\n    const [userInfo, setUserInfo] = useState({})\n    const [missionMaker, setMissionMaker] = useState(\"\") // we need to get the mission maker as well\n\n    const [playersDict, setPlayersDict] = useState(new Map())\n\n    useEffect(() => {\n\n        if (!loading && !playersLoading && user && gameData !== undefined) {\n            const [notMember, isOwner, getUserInfo, getPlayersDict] = loopPlayers(players, user)\n            setNotMember(!!notMember)\n            setOwner(!!isOwner)\n            setUserInfo(getUserInfo)\n            setPlayersDict(getPlayersDict)\n            if (gameData.turn !== 0) {\n                setMissionMaker(gameData.playersList[gameData.missionMaker])\n            }\n        }\n\n    }, [loading, playersLoading, gameData]) // should only try again after the players change\n\n    // TODO: improve the loading haha\n    if (!loading && !playersLoading) {\n        if (!user || gameData === undefined || notMember) {\n            return <Redirect to=\"/\" />\n        }\n    }\n\n    return (\n        !loading && !playersLoading ?\n            <div>\n                The Room Code is: {gameId}\n                <br />\n                Turn: {gameData.turn}\n                <hr />\n                <Players players={players} loading={playersLoading} user={userInfo} missionMaker={missionMaker} />\n                <hr />\n                {gameData.turn === 0 ?\n                    <p>Game has not started yet!</p>\n                    : <Mission\n                        gameData={gameData}\n                        gameId={gameId}\n                        players={players}\n                        uid={user.uid}\n                        missionMaker={missionMaker}\n                        playersDict={playersDict}\n                    />\n                }\n                <hr />\n                {gameData.turn === 60 &&\n                    // todo: what to show when the winner is decided!\n                    gameData.winner\n                }\n                <hr />\n                {owner && <Owner gameId={gameId} user={userInfo} />}\n                <Button variant=\"outline-info\" href=\"/\">Home</Button>\n            </div>\n            : <>loading...</>\n    )\n}\n\n","import React from 'react';\nimport './App.css';\nimport { MainMenu } from './components/MainMenu';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { GameRoom } from './components/GameRoom/GameRoom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* so our app will reroute to places */}\n      <Router>\n        <Switch>\n\n          <Route path=\"/games/:gameId\">\n            <GameRoom />\n          </Route>\n\n          {/* just the regular path, go to main menu */}\n          <Route path=\"/\">\n            <MainMenu />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}